<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1280, 720]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="sess_1" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="inst_sess_1">
      <RoutineSettingsComponent name="inst_sess_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="inst_sess_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="sess_1_ex" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="sess_1_ex" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&quot;Participants choose between a risky gamble and a guaranteed $10 for themselves.&quot;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="polygan_self">
      <RoutineSettingsComponent name="polygan_self" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="polygan_self" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_pol_self_1" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_pol_self_1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="self_1">
      <RoutineSettingsComponent name="self_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="self_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as psychopy from 'psychopy';&amp;#10;import * as random from 'random';&amp;#10;percentage_slice_1 = Math.random.uniform(0.0, 1.0);&amp;#10;pie = new psychopy.visual.Pie(psychoJS.window, {&quot;radius&quot;: 0.5, &quot;start&quot;: 0, &quot;end&quot;: (percentage_slice_1 * 360), &quot;edges&quot;: 32, &quot;units&quot;: &quot;&quot;, &quot;lineWidth&quot;: 1.5, &quot;lineColor&quot;: [0, 1, 0], &quot;fillColor&quot;: false, &quot;pos&quot;: [0, 0], &quot;size&quot;: 0.5, &quot;opacity&quot;: 1.0, &quot;contrast&quot;: 1.0, &quot;depth&quot;: 0, &quot;interpolate&quot;: false, &quot;name&quot;: null, &quot;autoLog&quot;: null, &quot;autoDraw&quot;: false, &quot;colorSpace&quot;: [1, 1, 0], &quot;color&quot;: [0, 1, 0], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;lineColorSpace&quot;: &quot;rgb&quot;, &quot;lineRGB&quot;: true, &quot;fillRGB&quot;: [0, 1, 0]});&amp;#10;pie.setColor = [1, 0, 1];&amp;#10;pie.setAutoDraw(true);&amp;#10;text_pos = [0.1, 0.0];&amp;#10;text_height = 0.04;&amp;#10;text_width = 0.2;&amp;#10;background_rect = new visual.Rect({&quot;win&quot;: psychoJS.window, &quot;depth&quot;: (- 1.0), &quot;width&quot;: (text_width / 2.0), &quot;height&quot;: text_height, &quot;pos&quot;: text_pos, &quot;fillColor&quot;: &quot;black&quot;, &quot;lineColor&quot;: &quot;black&quot;});&amp;#10;round_percentage_slice_1 = util.round((percentage_slice_1 * 100));&amp;#10;random_text_accept = new visual.TextStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;random_text&quot;, &quot;text&quot;: `$22`, &quot;font&quot;: &quot;Arial&quot;, &quot;pos&quot;: [0.1, 0.0], &quot;height&quot;: text_height, &quot;wrapWidth&quot;: null, &quot;ori&quot;: 0.0, &quot;opacity&quot;: null, &quot;languageStyle&quot;: &quot;LTR&quot;, &quot;depth&quot;: (- 2.0)});&amp;#10;random_text_accept.color = [1, 1, 1];&amp;#10;random_text_accept.setAutoDraw(true);&amp;#10;background_rect.setAutoDraw(true);&amp;#10;pie_2 = new psychopy.visual.Pie(psychoJS.window, {&quot;radius&quot;: 0.5, &quot;start&quot;: (percentage_slice_1 * 360), &quot;end&quot;: 360, &quot;edges&quot;: 32, &quot;units&quot;: &quot;&quot;, &quot;lineWidth&quot;: 1.5, &quot;lineColor&quot;: [0, 1, 0], &quot;fillColor&quot;: false, &quot;pos&quot;: [0, 0], &quot;size&quot;: 0.5, &quot;opacity&quot;: 1.0, &quot;contrast&quot;: 1.0, &quot;depth&quot;: 0, &quot;interpolate&quot;: false, &quot;name&quot;: null, &quot;autoLog&quot;: null, &quot;autoDraw&quot;: false, &quot;colorSpace&quot;: [1, 1, 0], &quot;color&quot;: [1, 0, 0], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;lineColorSpace&quot;: &quot;rgb&quot;, &quot;lineRGB&quot;: true, &quot;fillRGB&quot;: [1, 0, 0]});&amp;#10;pie_2.setColor = [1, 0, 0];&amp;#10;pie_2.setAutoDraw(true);&amp;#10;percentage_slice_2 = (1 - percentage_slice_1);&amp;#10;percentage_reject = util.round((percentage_slice_2 * 100));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import psychopy&amp;#10;import random&amp;#10;# Set random start and end angles&amp;#10;&amp;#10;percentage_slice_1 = random.uniform(0.0, 1.0) &amp;#10;pie = psychopy.visual.Pie(win, radius=0.5, start=0, end=percentage_slice_1* 360, edges=32,&amp;#10;units='', lineWidth=1.5, lineColor=(0,1,0), fillColor=False,&amp;#10;pos=(0, 0), size=0.5, opacity=1.0, contrast=1.0,&amp;#10;depth=0, interpolate=False, name=None, autoLog=None, autoDraw=False,&amp;#10;colorSpace=(1,1,0), color=[0,1,0], fillColorSpace='rgb', lineColorSpace='rgb',&amp;#10;lineRGB=True, fillRGB=[0,1,0])&amp;#10;pie.setColor = [1,0,1]&amp;#10;pie.setAutoDraw(True)&amp;#10;&amp;#10;# Define the position and size of the text&amp;#10;text_pos = (0.1, 0.0)&amp;#10;text_height = 0.04&amp;#10;text_width = 0.2  # Adjust this width to fit your text&amp;#10;background_rect = visual.Rect(&amp;#10;    win=win,&amp;#10;    depth=-1.0,&amp;#10;    width=text_width/2.0,&amp;#10;    height=text_height,  # Slightly larger than text height to provide padding&amp;#10;    pos=text_pos,&amp;#10;    fillColor='black',  # Background color&amp;#10;    lineColor='black'  # Same as fill color to hide the border&amp;#10;)&amp;#10;round_percentage_slice_1 = round(percentage_slice_1 * 100)&amp;#10;random_text_accept = visual.TextStim(win=win, name='random_text',&amp;#10;    text=f'$22',&amp;#10;    font='Arial',&amp;#10;    pos=(0.1, 0.0), height=text_height, wrapWidth=None, ori=0.0, &amp;#10;    opacity=None, &amp;#10;    languageStyle='LTR',&amp;#10;    depth=-2.0);&amp;#10;random_text_accept.color=[1,1,1]&amp;#10;random_text_accept.setAutoDraw(True)&amp;#10;background_rect.setAutoDraw(True)&amp;#10;# Slice 2&amp;#10;&amp;#10;pie_2 = psychopy.visual.Pie(win, radius=0.5, start=percentage_slice_1* 360, end=360, edges=32,&amp;#10;units='', lineWidth=1.5, lineColor=(0,1,0), fillColor=False,&amp;#10;pos=(0, 0), size=0.5, opacity=1.0, contrast=1.0,&amp;#10;depth=0, interpolate=False, name=None, autoLog=None, autoDraw=False,&amp;#10;colorSpace=(1,1,0), color=[1,0,0], fillColorSpace='rgb', lineColorSpace='rgb',&amp;#10;lineRGB=True, fillRGB=[1,0,0])&amp;#10;pie_2.setColor = [1,0,0]&amp;#10;pie_2.setAutoDraw(True)&amp;#10;&amp;#10;percentage_slice_2 = 1 - percentage_slice_1&amp;#10;percentage_reject = round(percentage_slice_2 * 100)&amp;#10;#random_text_reject = visual.TextStim(win=win, name='random_text',&amp;#10;#    text=f'{percentage_reject}',&amp;#10;#    font='Arial',&amp;#10;#    pos=(-0.06, -0.06), height=0.04, wrapWidth=None, ori=0.0, &amp;#10;#    color=[1,1,1], colorSpace='rgb', opacity=None, &amp;#10;#    languageStyle='LTR',&amp;#10;#    depth=-2.0);&amp;#10;#random_text_reject.setAutoDraw(True)&amp;#10;#" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="import time&amp;#10;if key_resp_self.keys == &quot;right&quot;:&amp;#10;    key_resp_self.keys = -1&amp;#10;else:&amp;#10;    key_resp_self.keys = 1" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="import * as time from 'time';&amp;#10;if ((key_resp_self.keys === &quot;right&quot;)) {&amp;#10;    key_resp_self.keys = (- 1);&amp;#10;} else {&amp;#10;    key_resp_self.keys = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="#pie.setAutoDraw(False)&amp;#10;#pie_2.setAutoDraw(False)&amp;#10;#random_text_accept.setAutoDraw(False)&amp;#10;#random_text_reject.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="pie.setAutoDraw(false);&amp;#10;pie_2.setAutoDraw(false);&amp;#10;random_text_accept.setAutoDraw(false);&amp;#10;background_rect.setAutoDraw(false);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="pie.setAutoDraw(False)&amp;#10;pie_2.setAutoDraw(False)&amp;#10;random_text_accept.setAutoDraw(False)&amp;#10;background_rect.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_self" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_self" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="accept_button" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="accept_button" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.3, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Accept" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="reject_button" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="RTL" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="reject_button" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.3, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Reject" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="key_resp_self_to_num" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="import time&amp;#10;if key_resp_self.keys == &quot;right&quot;:&amp;#10;    key_resp_self.keys = -1&amp;#10;else:&amp;#10;    key_resp_self.keys = 1" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="import * as time from 'time';&amp;#10;if ((key_resp_self.keys === &quot;right&quot;)) {&amp;#10;    key_resp_self.keys = (- 1);&amp;#10;} else {&amp;#10;    key_resp_self.keys = 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="key_resp_self_to_num" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="confirmation">
      <RoutineSettingsComponent name="confirmation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="confirmation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="confirmation_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as psychopy from 'psychopy';&amp;#10;import * as random from 'random';&amp;#10;pie = new psychopy.visual.Pie(psychoJS.window, {&quot;radius&quot;: 0.5, &quot;start&quot;: 0, &quot;end&quot;: (percentage_slice_1 * 360), &quot;edges&quot;: 32, &quot;units&quot;: &quot;&quot;, &quot;lineWidth&quot;: 1.5, &quot;lineColor&quot;: [0, 1, 0], &quot;fillColor&quot;: false, &quot;pos&quot;: [0, 0], &quot;size&quot;: 0.5, &quot;opacity&quot;: 1.0, &quot;contrast&quot;: 1.0, &quot;depth&quot;: 0, &quot;interpolate&quot;: false, &quot;name&quot;: null, &quot;autoLog&quot;: null, &quot;autoDraw&quot;: false, &quot;colorSpace&quot;: [1, 1, 0], &quot;color&quot;: [0, 1, 0], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;lineColorSpace&quot;: &quot;rgb&quot;, &quot;lineRGB&quot;: true, &quot;fillRGB&quot;: [0, 1, 0]});&amp;#10;pie.setColor = [1, 0, 1];&amp;#10;pie.setAutoDraw(true);&amp;#10;random_text_accept = new visual.TextStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;random_text&quot;, &quot;text&quot;: `$22`, &quot;font&quot;: &quot;Arial&quot;, &quot;pos&quot;: [0.1, 0.0], &quot;height&quot;: text_height, &quot;wrapWidth&quot;: null, &quot;ori&quot;: 0.0, &quot;opacity&quot;: null, &quot;languageStyle&quot;: &quot;LTR&quot;, &quot;depth&quot;: (- 2.0)});&amp;#10;random_text_accept.color = [1, 1, 1];&amp;#10;random_text_accept.setAutoDraw(true);&amp;#10;background_rect.setAutoDraw(true);&amp;#10;pie_2 = new psychopy.visual.Pie(psychoJS.window, {&quot;radius&quot;: 0.5, &quot;start&quot;: (percentage_slice_1 * 360), &quot;end&quot;: 360, &quot;edges&quot;: 32, &quot;units&quot;: &quot;&quot;, &quot;lineWidth&quot;: 1.5, &quot;lineColor&quot;: [0, 1, 0], &quot;fillColor&quot;: false, &quot;pos&quot;: [0, 0], &quot;size&quot;: 0.5, &quot;opacity&quot;: 1.0, &quot;contrast&quot;: 1.0, &quot;depth&quot;: 0, &quot;interpolate&quot;: false, &quot;name&quot;: null, &quot;autoLog&quot;: null, &quot;autoDraw&quot;: false, &quot;colorSpace&quot;: [1, 1, 0], &quot;color&quot;: [1, 0, 0], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;lineColorSpace&quot;: &quot;rgb&quot;, &quot;lineRGB&quot;: true, &quot;fillRGB&quot;: [1, 0, 0]});&amp;#10;pie_2.setColor = [1, 0, 0];&amp;#10;pie_2.setAutoDraw(true);&amp;#10;percentage_slice_2 = (1 - percentage_slice_1);&amp;#10;percentage_reject = util.round((percentage_slice_2 * 100));&amp;#10;border_choic = new visual.rect.Rect(psychoJS.window, {&quot;width&quot;: 0.5, &quot;height&quot;: 0.5});&amp;#10;border_choic.size = [0.3, 0.1];&amp;#10;border_choic.lineColor = [1, 1, 0];&amp;#10;border_choic.fillColor = null;&amp;#10;if ((key_resp_self.keys === (- 1))) {&amp;#10;    border_choic.pos = [0.3, (- 0.3)];&amp;#10;} else {&amp;#10;    if ((key_resp_self.keys === 1)) {&amp;#10;        key_resp_self.keys = 1;&amp;#10;        border_choic.pos = [(- 0.3), (- 0.3)];&amp;#10;    } else {&amp;#10;    }&amp;#10;}&amp;#10;border_choic.setAutoDraw(true);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import psychopy&amp;#10;import random&amp;#10;# Set random start and end angles&amp;#10;&amp;#10;#percentage_slice_1 = random.uniform(0.2, 0.3) &amp;#10;pie = psychopy.visual.Pie(win, radius=0.5, start=0, end=percentage_slice_1* 360, edges=32,&amp;#10;units='', lineWidth=1.5, lineColor=(0,1,0), fillColor=False,&amp;#10;pos=(0, 0), size=0.5, opacity=1.0, contrast=1.0,&amp;#10;depth=0, interpolate=False, name=None, autoLog=None, autoDraw=False,&amp;#10;colorSpace=(1,1,0), color=[0,1,0], fillColorSpace='rgb', lineColorSpace='rgb',&amp;#10;lineRGB=True, fillRGB=[0,1,0])&amp;#10;pie.setColor = [1,0,1]&amp;#10;pie.setAutoDraw(True)&amp;#10;&amp;#10;&amp;#10;&amp;#10;#round_percentage_slice_1 = round(percentage_slice_1 * 100)&amp;#10;random_text_accept = visual.TextStim(win=win, name='random_text',&amp;#10;    text=f'$22',&amp;#10;    font='Arial',&amp;#10;    pos=(0.1, 0.0), height=text_height, wrapWidth=None, ori=0.0, &amp;#10;    opacity=None, &amp;#10;    languageStyle='LTR',&amp;#10;    depth=-2.0);&amp;#10;random_text_accept.color=[1,1,1]&amp;#10;random_text_accept.setAutoDraw(True)&amp;#10;# Draw the background rectangle&amp;#10;background_rect.setAutoDraw(True)&amp;#10;&amp;#10;# Slice 2&amp;#10;&amp;#10;pie_2 = psychopy.visual.Pie(win, radius=0.5, start=percentage_slice_1* 360, end=360, edges=32,&amp;#10;units='', lineWidth=1.5, lineColor=(0,1,0), fillColor=False,&amp;#10;pos=(0, 0), size=0.5, opacity=1.0, contrast=1.0,&amp;#10;depth=0, interpolate=False, name=None, autoLog=None, autoDraw=False,&amp;#10;colorSpace=(1,1,0), color=[1,0,0], fillColorSpace='rgb', lineColorSpace='rgb',&amp;#10;lineRGB=True, fillRGB=[1,0,0])&amp;#10;pie_2.setColor = [1,0,0]&amp;#10;pie_2.setAutoDraw(True)&amp;#10;&amp;#10;percentage_slice_2 = 1 - percentage_slice_1&amp;#10;percentage_reject = round(percentage_slice_2 * 100)&amp;#10;#random_text_reject = visual.TextStim(win=win, name='random_text',&amp;#10;#    text=f'{percentage_reject}',&amp;#10;#    font='Arial',&amp;#10;#    pos=(-0.06, -0.06), height=0.04, wrapWidth=None, ori=0.0, &amp;#10;#    color=[1,1,1], colorSpace='rgb', opacity=None, &amp;#10;#    languageStyle='LTR',&amp;#10;#    depth=-2.0);&amp;#10;#random_text_reject.setAutoDraw(True)&amp;#10;border_choic = visual.rect.Rect(win, width=0.5, height=0.5)&amp;#10;border_choic.size = (0.3,0.1)&amp;#10;border_choic.lineColor = [1,1,0]&amp;#10;border_choic.fillColor = None&amp;#10;if key_resp_self.keys == -1:&amp;#10;    &amp;#10;#    border_choic.color = [1,1,0]&amp;#10;#    border_choic.fillcolor = False&amp;#10;    border_choic.pos = (0.3,-0.3)&amp;#10;&amp;#10;elif key_resp_self.keys == 1:&amp;#10;    key_resp_self.keys = 1&amp;#10;#    border_choic.color = [0,1,0]&amp;#10;#    border_choic.fillcolor = False&amp;#10;    border_choic.pos = (-0.3,-0.3)&amp;#10;else:&amp;#10;    pass&amp;#10;border_choic.setAutoDraw(True)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="pie.setAutoDraw(false);&amp;#10;pie_2.setAutoDraw(false);&amp;#10;random_text_accept.setAutoDraw(false);&amp;#10;border_choic.setAutoDraw(false);&amp;#10;background_rect.setAutoDraw(false);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="pie.setAutoDraw(False)&amp;#10;pie_2.setAutoDraw(False)&amp;#10;random_text_accept.setAutoDraw(False)&amp;#10;#random_text_reject.setAutoDraw(False)&amp;#10;border_choic.setAutoDraw(False)&amp;#10;background_rect.setAutoDraw(False)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="confirmation_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_confirm" plugin="None">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_confirm" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="accept_button_confirm" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="accept_button_confirm" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.3, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Accept" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="reject_button_confirm" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="reject_button_confirm" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.3, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Reject" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="inst_sess_1"/>
    <LoopInitiator loopType="TrialHandler" name="Sess_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="28" valType="num"/>
      <Param name="name" updates="None" val="Sess_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="polygan_self"/>
    <Routine name="self_1"/>
    <Routine name="confirmation"/>
    <LoopTerminator name="Sess_1"/>
  </Flow>
</PsychoPy2experiment>
